- hosts: localhost
  connection: local
  gather_facts: no
  sudo: no
  vars:
    homebrew_taps:
      - caskroom/cask
      - sanemat/font
      - itchyny/fillin
    homebrew_packages:
      - { name: ansible }
      #- { name: azure-cli }
      - { name: awscli }
      - { name: aws-elasticbeanstalk }
      - { name: certbot }
      - { name: curl }
      - { name: direnv }
      - { name: emacs, install_options: [ '--with-cocoa', '--srgb=emacs' ] }
      - { name: fillin }
      - { name: fish }
      - { name: gcc }
      - { name: ghq }
      - { name: git }
      - { name: git-secrets }
      - { name: go }
      - { name: jid }
      - { name: jq }
      - { name: nkf }
      - { name: node }
      - { name: nvm }
      - { name: peco }
      - { name: pyenv }
      - { name: python }
      - { name: rbenv }
      - { name: redpen }
      - { name: ricty, install_options: [ '--vim-powerline', '--powerline' ] }
      - { name: ruby-build }
      - { name: rust }
      - { name: tig }
      - { name: vim }
      - { name: zsh }
      #- { name: Caskroom/cask/cargo }

    homebrew_cask_packages:
      - { name: evernote }
      - { name: firefox }
      - { name: gimp }
      - { name: google-chrome }
      - { name: iterm2 }
      - { name: skitch }
      - { name: skype }
      - { name: slack }
      - { name: visual-studio-code }
      - { name: vlc }
      #- { name: vmware-fusion }

  tasks:
    - name: homebrew の tap リポジトリを追加
      homebrew_tap: tap={{ item }} state=present
      with_items: "{{ homebrew_taps }}"
      ignore_errors: yes

    - name: homebrew をアップデート
      homebrew: update_homebrew=yes

    # brew
    - name: brew パッケージをインストール
      homebrew: >
        name={{ item.name }}
        state={{ item.state | default('latest') }}
        install_options={{
          item.install_options | default() | join(',')
          if item.install_options is not string
          else item.install_options
        }}
      with_items: "{{ homebrew_packages }}"
      register: brew_result
    - name: brew パッケージの情報保存先ディレクトリを作成
      file: path=brew_info state=directory
    - name: brew パッケージの情報を保存
      shell: brew info {{ item }} > brew_info/{{ item }}
      with_items: "{{ brew_result.results | selectattr('changed') | map(attribute='item') | map(attribute='name') | list }}"

    # cask
    - name: homebrew-cask のインストール
      homebrew: name=cask state=present
    - name: cask パッケージをインストール
      homebrew_cask: name={{ item.name }} state={{ item.state|default('installed') }}
      with_items: "{{ homebrew_cask_packages }}"
      register: cask_result
    - name: cask パッケージの情報保存先ディレクトリを作成
      file: path=cask_info state=directory
    - name: cask パッケージの情報を保存
      shell: brew cask info {{ item }} > cask_info/{{ item }}
      with_items: "{{ cask_result.results | selectattr('changed') | map(attribute='item') | map(attribute='name') | list }}"

    # oh-my-zsh
    - name: oh-my-zsh のインストール
      shell: curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
      args:
        creates: ~/.oh-my-zsh/
 
    # Ricty
    - name: xquartz のインストール (for Ricty)
      homebrew_cask: name=xquartz
    - name: fontforge のインストール (for Ricty)
      homebrew: name=fontforge
    - name: Ricty のインストール
      homebrew: name=ricty
    - name: 生成されたフォントファイルをコピー
      shell: cp -f $(brew --cellar ricty)/*/share/fonts/Ricty*.ttf ~/Library/Fonts/
      args:
        creates: ~/Library/Fonts/Ricty-Bold.ttf
      notify: run fc-cache

    # Cargo
    #- name: cargo パッケージのインストール
    #  shell: cargo install git-brws
 
  handlers:
    - name: run fc-cache
      shell: fc-cache -vf
